{"version":3,"file":"Image.js","sourceRoot":"","sources":["../src/Image.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,mBAAmB,EAAE,MAAM,mBAAmB,CAAC;AAClE,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAE1C,OAAO,SAAS,EAAE,EAAE,eAAe,EAAE,MAAM,aAAa,CAAC;AACzD,OAAO,EAAc,eAAe,EAAE,MAAM,eAAe,CAAC;AAE5D,MAAM,OAAO,KAAM,SAAQ,KAAK,CAAC,SAAqB;IACpD;;;OAGG;IACH,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAW;QAC/B,IAAI,QAAQ,CAAC,EAAE,KAAK,SAAS,EAAE;YAC7B,MAAM,IAAI,mBAAmB,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;SACpD;QACD,OAAO,MAAM,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEvE,MAAM,EAAE,UAAU,EAAE,eAAe,EAAE,GAAG,SAAS,EAAE,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;QACxF,MAAM,UAAU,GAAG,cAAc,IAAI,eAAe,IAAI,eAAe,CAAC,KAAK,CAAC;QAE9E,OAAO,oBAAC,SAAS,OAAK,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,GAAI,CAAC;IAChF,CAAC;CACF","sourcesContent":["import { Platform, UnavailabilityError } from 'expo-modules-core';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport ExpoImage, { ExpoImageModule } from './ExpoImage';\nimport { ImageProps, ImageResizeMode } from './Image.types';\n\nexport class Image extends React.Component<ImageProps> {\n  /**\n   * **Available on @Android only.** Caching the image that can be later used in ImageView\n   * @return an empty promise.\n   */\n  static async prefetch(url: string): Promise<void> {\n    if (Platform.OS !== 'android') {\n      throw new UnavailabilityError('Image', 'prefetch');\n    }\n    return await ExpoImageModule.prefetch(url);\n  }\n\n  render() {\n    const { style, resizeMode: resizeModeProp, ...restProps } = this.props;\n\n    const { resizeMode: resizeModeStyle, ...restStyle } = StyleSheet.flatten([style]) || {};\n    const resizeMode = resizeModeProp ?? resizeModeStyle ?? ImageResizeMode.COVER;\n\n    return <ExpoImage {...restProps} style={restStyle} resizeMode={resizeMode} />;\n  }\n}\n"]}